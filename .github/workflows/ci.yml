name: CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "**" ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (ruff/black/codespell)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: python -m pip install --upgrade pip
      - run: pip install ruff==0.5.7 black==24.8.0 codespell==2.3.0
      - run: ruff check .
      - run: black --check .
      - run: codespell --ignore-words-list=crate,uptodate --skip=*.png,*.jpg,*.svg,*.gif,*.pdf

  typecheck:
    name: Typecheck (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
      - run: python -m pip install --upgrade pip
      - run: pip install mypy==1.11.2 types-setuptools
      - run: mypy --install-types --non-interactive --config-file mypy.ini || true
      - run: mypy provision tests

  test:
    name: Tests (pytest + coverage) [py311,py312]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - run: python -m pip install --upgrade pip
      - run: pip install pytest pytest-cov
      - run: pytest -q --maxfail=1 --disable-warnings --cov=provision --cov-report=xml --cov-report=term-missing --cov-fail-under=85
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            coverage.xml
            .pytest_cache
            .coverage
